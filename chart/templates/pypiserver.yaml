apiVersion: v1
kind: Service
metadata:
  name: pypi
spec:
  selector:
    app: pypi
  ports:
    - port: 80
      name: http
      protocol: TCP
      targetPort: http
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: pypi
  labels:
    app: pypi
spec:
  replicas: 1
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app: pypi
  serviceName: pypi
  volumeClaimTemplates:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: pypi-data
      spec:
        storageClassName: longhorn-crypto
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 16Gi
  template:
    metadata:
      labels:
        app: pypi
    spec:
      serviceAccountName: pypi
      securityContext:
        seccompProfile:
          type: RuntimeDefault
        runAsNonRoot: true
        fsGroup: 9898
      volumes:
        - name: credentials
          secret:
            secretName: credentials
      containers:
        - name: pypiserver
          image: {{ .Values.image }}:{{ .Values.appVersion }}
          ports:
            - containerPort: 8080
              protocol: TCP
              name: http
          volumeMounts:
            - mountPath: /data/packages
              name: pypi-data
              subPath: packages
            - mountPath: /data/.htpasswd
              name: credentials
              subPath: access_file
              readOnly: true
          startupProbe:
            initialDelaySeconds: 15
            failureThreshold: 10
            httpGet:
              port: http
              path: /health
          livenessProbe:
            httpGet:
              port: http
              path: /health
          resources:
            requests:
              cpu: 10m
              memory: 32Mi
            limits:
              cpu: 100m
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop: [ALL]
