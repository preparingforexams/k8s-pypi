name: Main
on:
  push:
    branches: [ main ]
  pull_request: { }

jobs:
  build-container-image:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v4
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ github.token }}
      - name: Build and push container image
        uses: docker/build-push-action@v5
        with:
          push: false
          tags: "ghcr.io/${{ env.GITHUB_REPOSITORY_OWNER_PART_SLUG }}/${{ env.GITHUB_REPOSITORY_NAME_PART_SLUG }}:${{ github.sha }}"

  push-container-image:
    runs-on: ubuntu-latest
    if: github.ref_name == github.event.repository.default_branch
    steps:
      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v4
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ github.token }}
      - name: Build and push container image
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: "ghcr.io/${{ env.GITHUB_REPOSITORY_OWNER_PART_SLUG }}/${{ env.GITHUB_REPOSITORY_NAME_PART_SLUG }}:${{ github.sha }}"

  deploy:
    runs-on: ubuntu-latest
    needs: [ push-container-image ]
    concurrency: production
    steps:
      - uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac # v4
      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v4
      - name: Substitute environment variables in values.yaml
        env:
          ACCESS_FILE_B64: ${{ secrets.ACCESS_FILE_B64 }}
          IMAGE_NAME: "ghcr.io/${{ env.GITHUB_REPOSITORY_OWNER_PART_SLUG }}/${{ env.GITHUB_REPOSITORY_NAME_PART_SLUG }}"
        run: "envsubst < values.yaml > values_sub.yaml && mv values_sub.yaml values.yaml"
      - uses: WyriHaximus/github-action-helm3@v3
        with:
          exec: |
            helm dependency update
            helm upgrade files . --install --namespace=pypi --atomic
          kubeconfig: '${{ secrets.KUBECONFIG_RAW }}'

  clean:
    runs-on: ubuntu-latest
    concurrency: cleanup
    continue-on-error: true
    needs: [ deploy ]
    steps:
      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v4
      - name: Clean up old app container images
        uses: actions/delete-package-versions@v4
        with:
          package-name: ${{ env.GITHUB_REPOSITORY_NAME_PART_SLUG }}
          package-type: container
          min-versions-to-keep: 10
